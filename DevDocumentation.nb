(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     40838,        906]
NotebookOptionsPosition[     39373,        854]
NotebookOutlinePosition[     39971,        877]
CellTagsIndexPosition[     39928,        874]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["genfunlib Developer Documentation", "Title",
 CellChangeTimes->{{3.5258767471351247`*^9, 3.525876752367424*^9}, {
  3.525877176063658*^9, 3.52587718011189*^9}, {3.5289793836424613`*^9, 
  3.5289793850245404`*^9}}],

Cell[CellGroupData[{

Cell["Ideas and notes", "Section",
 CellChangeTimes->{{3.5289844249528074`*^9, 3.5289844264168916`*^9}}],

Cell[TextData[{
 "computer-readable centralized database of mathematical facts proved by \
humans, but not yet provable by computers\n\tprogram that extracts math \
formulas and text from papers and converts the theorems to \
computer-processable form\n\tcombination of \[OpenCurlyDoubleQuote]central \
database for data such as random mapping results\[CloseCurlyDoubleQuote], the \
algolib encyclopedia, and building known mathematical facts into a CAS idea \
to be used in general ",
 Cell[BoxData["Reduce"], "Code",
  CellChangeTimes->{{3.542546829569436*^9, 3.5425468306014957`*^9}}],
 "-type solving\n\tchallenges: format for computer-readable math, difference \
between formulas in first paper and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code that implements them -- which one do we use?"
}], "Text",
 CellChangeTimes->{{3.542477980512412*^9, 3.542478010329118*^9}, {
  3.542491234666507*^9, 3.542491299482214*^9}, {3.5425461074171314`*^9, 
  3.5425461352327223`*^9}, {3.54254673032076*^9, 3.542546762576605*^9}, {
  3.5425468049930305`*^9, 3.542546931889289*^9}}],

Cell[TextData[{
 "symmath requirements:\n code in .m files\n data in .m files (if small \
enough)\n user documentation: tutorial, guide, help pages - only a pointer to \
mathematical background\n  formal specification?\n tests\n developer \
documentation: ?\n  proofs of correctness?\n ",
 StyleBox["In Action",
  FontSlant->"Italic"],
 " documents (separate)\n what about description of new math involved and \
connection to Notes/publishing?"
}], "Text",
 CellChangeTimes->{{3.5422938026427193`*^9, 3.5422938057158957`*^9}, {
  3.542301082813122*^9, 3.542301100517134*^9}, {3.5423011434365892`*^9, 
  3.5423011655408535`*^9}, {3.5423012649245377`*^9, 3.5423012922370996`*^9}, {
  3.5423015568612356`*^9, 3.542301579444527*^9}, {3.542301815622036*^9, 
  3.542301825908624*^9}, {3.5423018569654007`*^9, 3.5423018926524415`*^9}, {
  3.5423021149491563`*^9, 3.5423021186933703`*^9}, {3.5423035152142467`*^9, 
  3.5423035248767996`*^9}, {3.5423039568445067`*^9, 3.54230396004469*^9}, {
  3.5423067391016426`*^9, 3.5423067476611323`*^9}, {3.542306897260689*^9, 
  3.542306902412984*^9}, {3.5423090969105015`*^9, 3.542309139860958*^9}, {
  3.5423097540940905`*^9, 3.5423097551091485`*^9}, {3.542310175493193*^9, 
  3.542310190933076*^9}, {3.5423102706616364`*^9, 3.542310271629692*^9}, {
  3.542377134900719*^9, 3.5423771376358757`*^9}}],

Cell["\<\
The User Documentation doesn\[CloseCurlyQuote]t talk about how the \
implementations compute; Developer Documentation or Enumerative Combinatorics \
Algorithms does\
\>", "Text",
 CellChangeTimes->{{3.525883067152609*^9, 3.525883081991458*^9}, {
   3.525883152920515*^9, 3.52588315389157*^9}, {3.525883227455778*^9, 
   3.5258832376003585`*^9}, {3.525883288824288*^9, 3.525883289880348*^9}, {
   3.5258833325947914`*^9, 3.525883372912098*^9}, {3.525883422297922*^9, 
   3.5258834404279594`*^9}, {3.5258835052576675`*^9, 3.5258835735435734`*^9}, 
   3.5289278518896017`*^9, {3.528977087313119*^9, 3.5289770879951577`*^9}, {
   3.5289794356904383`*^9, 3.5289794661281796`*^9}, {3.5289795565243497`*^9, 
   3.5289796135316105`*^9}, 3.528979706506928*^9, 3.5289800739969473`*^9, {
   3.52898010744186*^9, 3.528980124152816*^9}, {3.5289801636650763`*^9, 
   3.5289801774718657`*^9}, {3.528980226113648*^9, 3.5289802452967453`*^9}, {
   3.528980382537595*^9, 3.5289804460362267`*^9}, 3.528980740377062*^9, {
   3.5363458644204683`*^9, 3.5363458847076283`*^9}, {3.5363461763553095`*^9, 
   3.5363462028598256`*^9}, {3.536346246043296*^9, 3.536346285419548*^9}, {
   3.536346438243289*^9, 3.5363464428515525`*^9}, {3.536346583435593*^9, 
   3.5363466436680384`*^9}, {3.5363467460528946`*^9, 3.536346761139757*^9}, {
   3.536347127012684*^9, 3.5363471309079065`*^9}, {3.53634720019587*^9, 
   3.5363472004838867`*^9}, {3.536347361269083*^9, 3.5363473784680667`*^9}, {
   3.536347665324474*^9, 3.536347754011546*^9}, {3.5363479282115097`*^9, 
   3.5363479287965436`*^9}, {3.5364350649718914`*^9, 3.536435069540153*^9}, {
   3.5423026400091877`*^9, 3.5423026465085597`*^9}}],

Cell[TextData[{
 ButtonBox["Programmatic formatting for Mathematica code - possible?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/2809/programmatic-\
formatting-for-mathematica-code-possible"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/2809/programmatic-\
formatting-for-mathematica-code-possible"],
 "\n",
 ButtonBox["Syntax highlighting for your own functions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/1446/syntax-\
highlighting-for-your-own-functions"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/1446/syntax-highlighting-\
for-your-own-functions"],
 "\n",
 ButtonBox["Setting Up Mathematica Packages",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/mathematica/tutorial/\
SettingUpMathematicaPackages.html"], None},
  ButtonNote->
   "http://reference.wolfram.com/mathematica/tutorial/\
SettingUpMathematicaPackages.html"],
 "\n",
 ButtonBox["Making Mathematica packages",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://stackoverflow.com/questions/6633180/making-mathematica-\
packages/6633769#6633769"], None},
  ButtonNote->
   "http://stackoverflow.com/questions/6633180/making-mathematica-packages/\
6633769#6633769"]
}], "Text",
 CellChangeTimes->{{3.542304270537449*^9, 3.542304304021364*^9}, {
  3.5423049040776854`*^9, 3.542304965770214*^9}, {3.542305664302168*^9, 
  3.5423056759768353`*^9}}],

Cell[TextData[{
 "User documentation method:\n ",
 ButtonBox["Authoring Using DocumentationTools",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.\
eclipse.help/html/reference/DocumentationTools/tutorial/\
AuthoringSymbolPagesUsingDocumentationTools.html"], None},
  ButtonNote->
   "http://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.\
eclipse.help/html/reference/DocumentationTools/tutorial/\
AuthoringSymbolPagesUsingDocumentationTools.html"],
 "\n ",
 ButtonBox["Mathematica Development User Guide > Tasks > Mathematica \
Documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.\
eclipse.help/html/helphome/help_home.html"], None},
  ButtonNote->
   "http://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.\
eclipse.help/html/helphome/help_home.html"]
}], "Text",
 CellChangeTimes->{{3.542305512619492*^9, 3.542305573100951*^9}}],

Cell["\<\
mathematical background - point to references, we shouldn't write about that \
if it isn't necessary\
\>", "Text",
 CellChangeTimes->{{3.525883067152609*^9, 3.525883081991458*^9}, {
   3.525883152920515*^9, 3.52588315389157*^9}, {3.525883227455778*^9, 
   3.5258832376003585`*^9}, {3.525883288824288*^9, 3.525883289880348*^9}, {
   3.5258833325947914`*^9, 3.525883372912098*^9}, {3.525883422297922*^9, 
   3.5258834404279594`*^9}, {3.5258835052576675`*^9, 3.5258835735435734`*^9}, 
   3.5289278518896017`*^9, {3.528977087313119*^9, 3.5289770879951577`*^9}, {
   3.5289794356904383`*^9, 3.5289794661281796`*^9}, {3.5289795565243497`*^9, 
   3.5289796135316105`*^9}, 3.528979706506928*^9, 3.5289800739969473`*^9, {
   3.52898010744186*^9, 3.528980124152816*^9}, {3.5289801636650763`*^9, 
   3.5289801774718657`*^9}, {3.528980226113648*^9, 3.5289802452967453`*^9}, {
   3.528980382537595*^9, 3.5289804460362267`*^9}, 3.528980740377062*^9, {
   3.5363458644204683`*^9, 3.5363458847076283`*^9}, {3.5363461763553095`*^9, 
   3.5363462028598256`*^9}, {3.536346246043296*^9, 3.536346285419548*^9}, {
   3.536346438243289*^9, 3.5363464428515525`*^9}, {3.536346583435593*^9, 
   3.5363466436680384`*^9}, {3.5363467460528946`*^9, 3.536346761139757*^9}, {
   3.536347127012684*^9, 3.5363471309079065`*^9}, {3.53634720019587*^9, 
   3.5363472004838867`*^9}, {3.536347361269083*^9, 3.5363473784680667`*^9}, {
   3.536347665324474*^9, 3.536347754011546*^9}, {3.5363479282115097`*^9, 
   3.5363479287965436`*^9}, {3.5364350649718914`*^9, 3.536435069540153*^9}, {
   3.5423026400091877`*^9, 3.542302647260603*^9}}],

Cell["Put Web links to the project on relevant Web pages", "Text",
 CellChangeTimes->{{3.531669983282363*^9, 3.5316700698673153`*^9}}],

Cell["Wolfram|Alpha", "Text",
 CellChangeTimes->{{3.5371041087490044`*^9, 3.537104111156142*^9}}],

Cell["Package pallettes?", "Text",
 CellChangeTimes->{{3.525883067152609*^9, 3.525883081991458*^9}, {
   3.525883152920515*^9, 3.52588315389157*^9}, {3.525883227455778*^9, 
   3.5258832376003585`*^9}, {3.525883288824288*^9, 3.525883289880348*^9}, {
   3.5258833325947914`*^9, 3.525883372912098*^9}, {3.525883422297922*^9, 
   3.5258834404279594`*^9}, {3.5258835052576675`*^9, 3.5258835735435734`*^9}, 
   3.5289278518896017`*^9, {3.528977087313119*^9, 3.5289770879951577`*^9}, {
   3.5289794356904383`*^9, 3.5289794661281796`*^9}, {3.5289795565243497`*^9, 
   3.5289796135316105`*^9}, 3.528979706506928*^9, 3.5289800739969473`*^9, {
   3.52898010744186*^9, 3.528980124152816*^9}, {3.5289801636650763`*^9, 
   3.52898017912096*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["blah", "Section",
 CellChangeTimes->{{3.55136513565005*^9, 3.551365135978069*^9}}],

Cell[TextData[{
 "GFeq2asymptoticCoef(gdev)\n",
 StyleBox["rec2GFeq\n\t\
\[OpenCurlyDoubleQuote]override\[CloseCurlyDoubleQuote] ",
  FontColor->GrayLevel[0]],
 Cell[BoxData["GeneratingFunction"], "Code",
  CellChangeTimes->{{3.5513660856753883`*^9, 3.5513660885625534`*^9}},
  FontColor->GrayLevel[0]],
 "\nGFeq2GF(KernelMethod)\nGFeq2rec\nGFeq2coefs\n\tdifferentiate eqn, set var \
to 0, solve"
}], "Text",
 CellChangeTimes->{{3.5513651493618345`*^9, 3.551365150017872*^9}, {
   3.551365265714489*^9, 3.5513652744419885`*^9}, {3.5513653460980873`*^9, 
   3.5513654380903482`*^9}, 3.551365629522298*^9, {3.551366071699589*^9, 
   3.551366099466177*^9}, {3.5513751086796083`*^9, 3.5513751995348053`*^9}, {
   3.551377237640378*^9, 3.551377270974285*^9}, {3.551378360486601*^9, 
   3.551378373167327*^9}, {3.5513786144471273`*^9, 3.551378614911154*^9}, {
   3.5513914777417297`*^9, 3.5513914933806243`*^9}, {3.551392339870041*^9, 
   3.5513923838365555`*^9}, {3.5514444953390074`*^9, 3.551444498383181*^9}, {
   3.551444823257763*^9, 3.551444823977804*^9}, {3.551444941322516*^9, 
   3.5514449448797197`*^9}, {3.5514451046598587`*^9, 3.551445107472019*^9}, {
   3.5514452094268503`*^9, 3.551445214824159*^9}, {3.551446403842167*^9, 
   3.551446411375598*^9}, {3.551527605234988*^9, 3.5515276097922487`*^9}, {
   3.551533841491681*^9, 3.5515338756736364`*^9}, {3.551545726846074*^9, 
   3.5515457278211303`*^9}, {3.551560086254386*^9, 3.551560086957426*^9}, {
   3.552064233390174*^9, 3.552064245629874*^9}}],

Cell[CellGroupData[{

Cell["GF Frameworks", "Subsection",
 CellChangeTimes->{{3.5515457372526693`*^9, 3.5515457391557784`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"DFA", ",", " ", "Regex", ",", " ", "RRGrammar"}], "}"}], "2", 
   "Spec"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}}],
 "?\n\t(not necessary to obtain GFs)"
}], "Text",
 CellChangeTimes->{
  3.551547449014577*^9, {3.551556063677307*^9, 3.5515560689596095`*^9}, {
   3.551559793903664*^9, 3.5515598663328066`*^9}, {3.551612895421276*^9, 
   3.5516129172375245`*^9}, {3.5518234162616425`*^9, 
   3.5518234168456755`*^9}, {3.55204544150134*^9, 3.552045449188779*^9}, {
   3.5520467345092955`*^9, 3.5520467448608875`*^9}}],

Cell["Species", "Subsubsection",
 CellChangeTimes->{{3.5515457794760847`*^9, 3.551545811340907*^9}, 
   3.5515458660810385`*^9, 3.5515459652347097`*^9, {3.551547974084609*^9, 
   3.55154797550069*^9}}],

Cell[CellGroupData[{

Cell["Symbolic Method", "Subsubsection",
 CellChangeTimes->{{3.551545974884261*^9, 3.551545979548528*^9}, {
  3.5515468982610755`*^9, 3.5515469009402285`*^9}, {3.5515479708454237`*^9, 
  3.551547971284449*^9}}],

Cell[TextData[{
 Cell[BoxData["Spec2GFeq"], "Code",
  CellChangeTimes->{3.5515469211423845`*^9}],
 " \nimplicit specs\npointing, substitution\nrestrictions, additional params"
}], "Text",
 CellChangeTimes->{{3.5515457794760847`*^9, 3.5515458571565275`*^9}, {
  3.551546902852338*^9, 3.5515469252686205`*^9}, {3.5516131787254806`*^9, 
  3.551613179397519*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regular Languages", "Subsubsection",
 CellChangeTimes->{{3.5515457794760847`*^9, 3.551545811340907*^9}, 
   3.5515458660810385`*^9, {3.551547962348938*^9, 3.551547966300164*^9}}],

Cell[TextData[{
 StyleBox["Public (Exported) Downvalues",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData["NFA2DFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["NFA2Regex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["NFA2RRGrammar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["NFA2Digraph"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["DFA2NFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["DFA2Regex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["DFA2RRGrammar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["DFA2Digraph"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Regex2NFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Regex2DFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Regex2RRGrammar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Regex2Digraph"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["RRGrammar2NFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["RRGrammar2DFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["RRGrammar2Regex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["RRGrammar2Digraph"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Digraph2NFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Digraph2DFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Digraph2Regex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n",
 Cell[BoxData["Digraph2RRGrammar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\n",
 Cell[BoxData["NFAUnion"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["NFAIntersection"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["NFAComplement"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["NFAConcat"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["NFAStar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["NFAReverse"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAUnion"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAIntersection"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAComplement"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAConcat"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAStar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DFAReverse"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexUnion"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexIntersection"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexComplement"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexConcat"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexStar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RegexReverse"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarUnion"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarIntersection"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarComplement"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarConcat"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarStar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["RRGrammarReverse"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DigraphUnion"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData[
  RowBox[{"DigraphIntersection", " "}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DigraphComplement"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DigraphConcat"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DigraphStar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n",
 Cell[BoxData["DigraphReverse"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}}],
 "\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "NFA", ",", "DFA", ",", "Regex", ",", "RRGrammar", ",", "Digraph"}], 
    "}"}], "2", "GF"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}, {3.5515479302621026`*^9, 
    3.5515479373255067`*^9}}],
 "\n\tallow the user to provide a function mapping each letter to a symbol\t\n\
\t\n",
 Cell[BoxData[
  RowBox[{"Disambiguate", 
   RowBox[{"{", 
    RowBox[{"Regex", ",", "RRGrammar", ",", "Digraph"}], "}"}]}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}, {3.5515479302621026`*^9, 
    3.5515479373255067`*^9}, {3.551552114077403*^9, 3.551552118709668*^9}}],
 "\n\tDigraph disambiguation is converting to a DFA and back\n",
 Cell[BoxData[
  RowBox[{"Test", 
   RowBox[{"{", 
    RowBox[{"Regex", ",", 
     RowBox[{"RRGrammar", "?"}], ",", 
     RowBox[{"NFA", "?"}], ",", "Digraph"}], "}"}], "Ambiguity"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}, {
    3.5515474012058425`*^9, 3.5515474106853848`*^9}, {3.5515475376946487`*^9, 
    3.5515475726696496`*^9}, {3.5515479302621026`*^9, 
    3.5515479373255067`*^9}, {3.551552114077403*^9, 3.551552118709668*^9}}],
 "\n\n",
 StyleBox["Representation Descriptions",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData["NFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "numStates_Integer", ",", " ", "alphabet_", ",", " ", "transitionMatrix_", 
    ",", " ", "\n", " ", 
    RowBox[{"acceptStates_", "?", "VectorQ"}], ",", " ", "initialState_"}], 
   "}"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\tnumber of states: integer >=0, where 0 states means null language\n\t\
alphabet: nonempty ",
 StyleBox["sorted",
  FontColor->GrayLevel[0.5]],
 " list of distinct strings, not containing \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]\n\ttransition matrix: numStates by alphabet size+1 \
matrix where entry i,j is a list of (valid) states accessible from state i \
and letter j = alphabet[j]. \[OpenCurlyDoubleQuote]Letter\
\[CloseCurlyDoubleQuote] alphabet size+1 is \[Epsilon]\n\taccept states: list \
of integers between 1 and number of states\n\tinitial state: integer between \
1 and number of states\n\n",
 Cell[BoxData["DFA"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "numStates_Integer", ",", " ", "alphabet_", ",", " ", "transitionMatrix_", 
    ",", " ", "\n", " ", 
    RowBox[{"acceptStates_", "?", "VectorQ"}], ",", " ", "initialState_"}], 
   "}"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\tnumber of states: integer >=0, where 0 states means null language\n\t\
alphabet: nonempty ",
 StyleBox["sorted",
  FontColor->GrayLevel[0.5]],
 " list of distinct strings, not containing \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]\n\ttransition matrix: numStates by alphabet size \
matrix where entry i,j is the (valid) state accessible from state i and \
letter j. \n\taccept states: list of integers between 1 and number of states\n\
\tinitial state: integer between 1 and number of states\n\n",
 Cell[BoxData["StringRegex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\tstring, with or without wrapping head ",
 Cell[BoxData["RegularExpression"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", containing [a-z,A-Z,0-9,*,(,),|,] and is a valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " regular expression (POSIX ERE I think)\n\tEmpty string accepts just \
\[Epsilon]\n\n",
 Cell[BoxData["SymbolicRegex"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\texpression built up from nonempty strings, ",
 Cell[BoxData["EmptyWord"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " and ",
 Cell[BoxData[
  RowBox[{"star", ",", "concat", ",", "or"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\n",
 Cell[BoxData["RRGrammar"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\tlist of rules in the form ",
 Cell[BoxData[
  RowBox[{"sym_Symbol", " ", "\[Rule]", " ", "RHS"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " or ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"sym_Symbol", "[", "n_Integer", "]"}], " ", "\[Rule]", " ", 
   "RHS"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ",\n\twhere ",
 Cell[BoxData["RHS"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " is either ",
 Cell[BoxData["EmptyWord"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", a string, ",
 Cell[BoxData["sym_Symbol"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", where ",
 Cell[BoxData["sym"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " is in a LHS, ",
 Cell[BoxData[
  RowBox[{"sym_Symbol", "[", "n_Integer", "]"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", where ",
 Cell[BoxData[
  RowBox[{"sym", "[", "n", "]"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " is in a LHS, ",
 Cell[BoxData[
  RowBox[{"concat", "[", 
   RowBox[{"str_String", ",", " ", "sym_Symbol"}], "]"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", ",
 Cell[BoxData[
  RowBox[{"concat", "[", 
   RowBox[{"str_String", ",", " ", 
    RowBox[{"sym_Symbol", "[", "n_Integer", "]"}]}], "]"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", or ",
 Cell[BoxData[
  RowBox[{"or", "[", "args__", "]"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 ", where ",
 Cell[BoxData["args"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 " is a sequence of those things. Strings cannot be empty.\n\tEmpty list is \
null language.\n\n",
 Cell[BoxData["Digraph"], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "graph_", ",", " ", "startVertices_", ",", " ", "endVertices_", ",", " ", 
    "eAccepted_"}], "}"}]], "Code",
  CellChangeTimes->{
   3.5515469211423845`*^9, {3.5515469566214137`*^9, 3.5515469847730236`*^9}}],
 "\n\tgraph: a directed graph, with vertices labeled with nonempty strings\n\t\
startVertices: list of vertices of graph; if empty: null languge (\[Epsilon] \
may still be accepted)\n\tendVertices: list of vertices of graph; if empty: \
null language (\[Epsilon] may still be accepted)\n\teAccepted: True if \
\[Epsilon] is accepted, False otherwise\n\tEmpty graph is null language (\
\[Epsilon] may still be accepted).\n\nIn rules that take a regex, either \
string or symbolic regexes can be used, and the output format matches the \
input format\n\nambiguity test via NFA test (see Book and Even papers -- is \
Book necessary, would ordinary construction work?) or recursive test (see \
Brabrand and Thomsen)\n\[OpenCurlyDoubleQuote]a**\[CloseCurlyDoubleQuote] is \
not considered ambiguous in Book, niether is \[OpenCurlyDoubleQuote]a* | b*\
\[CloseCurlyDoubleQuote].  ",
 StyleBox["our",
  FontSlant->"Italic"],
 " definition of ambiguity must include ",
 StyleBox["e",
  FontSlant->"Italic"],
 ".\nsemantic validity test for grammars via symbolicmethod\n\nBonus: words \
with occurrences of patterns\nBonus: accept more regex syntax"
}], "Text",
 CellChangeTimes->{{3.5515457794760847`*^9, 3.551545811340907*^9}, {
   3.5515458660810385`*^9, 3.5515458775886965`*^9}, {3.551546993428519*^9, 
   3.551546993871544*^9}, {3.551547416117695*^9, 3.5515474289494295`*^9}, {
   3.5515475796130466`*^9, 3.5515475801040745`*^9}, {3.551547917998401*^9, 
   3.551547953383425*^9}, {3.551548014973948*^9, 3.55154802060927*^9}, {
   3.5515481879658422`*^9, 3.551548218900612*^9}, {3.551548359518655*^9, 
   3.5515483626868362`*^9}, {3.551552167990487*^9, 3.5515521790951223`*^9}, {
   3.551552235165329*^9, 3.551552328708679*^9}, {3.5515524485795355`*^9, 
   3.5515524560109606`*^9}, {3.551556307043227*^9, 3.551556400891595*^9}, {
   3.5515565716393614`*^9, 3.5515565840930734`*^9}, {3.5515566282235975`*^9, 
   3.5515566525269876`*^9}, {3.55155683247328*^9, 3.551556845133004*^9}, {
   3.551556953471201*^9, 3.5515569660209184`*^9}, {3.5515570932191935`*^9, 
   3.5515571031407614`*^9}, {3.551557218629367*^9, 3.551557225572764*^9}, {
   3.551557511792135*^9, 3.5515575384296584`*^9}, {3.5515576372453103`*^9, 
   3.551557681788858*^9}, {3.55155772762648*^9, 3.5515577299406123`*^9}, {
   3.551558129770481*^9, 3.551558152796798*^9}, {3.551558213213254*^9, 
   3.5515582600209312`*^9}, {3.551558425152376*^9, 3.55155842540039*^9}, {
   3.551559139560238*^9, 3.5515591489727764`*^9}, {3.551559204042926*^9, 
   3.551559261669222*^9}, {3.5515593175904207`*^9, 3.5515593177654305`*^9}, {
   3.551559352734431*^9, 3.5515593745006757`*^9}, {3.55155945937653*^9, 
   3.551559469581114*^9}, {3.551559637485718*^9, 3.5515596386057816`*^9}, {
   3.5515598855319047`*^9, 3.551559890950215*^9}, {3.551612818462875*^9, 
   3.5516128259733047`*^9}, {3.5516128701418304`*^9, 
   3.5516128830535693`*^9}, {3.551613261515216*^9, 3.5516132724518414`*^9}, {
   3.551715480745299*^9, 3.551715492617978*^9}, {3.5517382014418483`*^9, 
   3.551738220460936*^9}, {3.5518184881808376`*^9, 3.5518185238408866`*^9}, {
   3.551953653994302*^9, 3.5519536596206236`*^9}, {3.5519579358361025`*^9, 
   3.5519579826817822`*^9}, {3.5519580216530113`*^9, 3.551958040672099*^9}, {
   3.5519582726353664`*^9, 3.5519583106595416`*^9}, {3.5519583482916937`*^9, 
   3.5519583606434*^9}, {3.5519584295553417`*^9, 3.5519585177393856`*^9}, {
   3.5519586718892026`*^9, 3.5519586807877116`*^9}, {3.551958903448447*^9, 
   3.5519589120959415`*^9}, 3.551958959141632*^9, {3.5519590925742645`*^9, 
   3.5519590934123125`*^9}, {3.551959154664816*^9, 3.551959161571211*^9}, {
   3.55195923813159*^9, 3.5519592388836327`*^9}, {3.5519595516605225`*^9, 
   3.5519596222835617`*^9}, {3.551959917908471*^9, 3.55195992069163*^9}, {
   3.5519617062217565`*^9, 3.5519617976699867`*^9}, {3.5519619394700975`*^9, 
   3.5519619562440567`*^9}, {3.55196399434863*^9, 3.5519639946756487`*^9}, {
   3.5519864985230675`*^9, 3.5519865393704033`*^9}, 3.551986599386836*^9, {
   3.551994151492792*^9, 3.551994172947019*^9}, {3.5520449909305687`*^9, 
   3.552045002517231*^9}, {3.552045036464173*^9, 3.552045063924743*^9}, {
   3.5520451138616*^9, 3.552045114996664*^9}, {3.5520451478085413`*^9, 
   3.5520452793780665`*^9}, {3.5520453615087643`*^9, 3.552045364420931*^9}, {
   3.552045399495937*^9, 3.5520454004319906`*^9}, {3.5520455582460165`*^9, 
   3.5520455593580804`*^9}, {3.5520456072868223`*^9, 
   3.5520456244128017`*^9}, {3.5520459202537227`*^9, 
   3.5520459320923996`*^9}, {3.552066662798128*^9, 3.5520666740617723`*^9}, {
   3.552076390328511*^9, 3.552076419694191*^9}, {3.552076465573815*^9, 
   3.5520764667178802`*^9}, {3.552076626790036*^9, 3.552076700942277*^9}, {
   3.5520767455588293`*^9, 3.552076799662924*^9}, {3.552076982487381*^9, 
   3.5520769842794833`*^9}, {3.552077022727682*^9, 3.552077022727682*^9}, {
   3.552124428102063*^9, 3.5521244546985846`*^9}, {3.552124487266447*^9, 
   3.552124589876316*^9}, {3.552125711231454*^9, 3.5521257263563194`*^9}, {
   3.5521258560007343`*^9, 3.552125998042859*^9}, {3.552126242106818*^9, 
   3.552126294794832*^9}, {3.5521263267546597`*^9, 3.5521263364982176`*^9}, {
   3.5521265191866665`*^9, 3.5521265218428183`*^9}, {3.552126585322449*^9, 
   3.552126677380715*^9}, {3.5521267151688757`*^9, 3.552126730434749*^9}, {
   3.5521267649147215`*^9, 3.552126855154883*^9}, {3.552126934625428*^9, 
   3.552126946674117*^9}, {3.552127045021743*^9, 3.552127055898365*^9}, {
   3.552127096674697*^9, 3.552127231438405*^9}, {3.552127287610618*^9, 
   3.5521272946430197`*^9}, {3.5521274926703463`*^9, 
   3.5521275028429284`*^9}, {3.552127701147271*^9, 3.5521277052685065`*^9}, {
   3.552127841335289*^9, 3.5521278413362894`*^9}, {3.552128110227669*^9, 
   3.552128111426738*^9}, {3.552128442618681*^9, 3.5521284438187494`*^9}, {
   3.552129598024766*^9, 3.5521296000478816`*^9}, {3.5521296346788626`*^9, 
   3.5521297549007387`*^9}, {3.5521299579713535`*^9, 3.552129958723397*^9}, {
   3.552130047787491*^9, 3.552130055370925*^9}, {3.5521301821631765`*^9, 
   3.552130311349566*^9}, {3.552130347626641*^9, 3.5521303591462994`*^9}, {
   3.5521305136281357`*^9, 3.552130520787545*^9}, {3.552130634897072*^9, 
   3.5521306365741673`*^9}, {3.552130801515602*^9, 3.5521308029626846`*^9}, {
   3.5521308398187923`*^9, 3.5521308505844083`*^9}, {3.5521309993499174`*^9, 
   3.552131104276919*^9}, {3.552131247461108*^9, 3.552131281107033*^9}, {
   3.5521313111807528`*^9, 3.5521313977867064`*^9}, {3.5521321557880616`*^9, 
   3.5521321566671124`*^9}, {3.552132328295929*^9, 3.552132333467224*^9}, {
   3.5521325430992146`*^9, 3.5521325471394453`*^9}, {3.55213264511605*^9, 
   3.552132645523073*^9}, {3.552133343428991*^9, 3.5521333581308317`*^9}, {
   3.5521334301569514`*^9, 3.552133550860855*^9}, {3.5521335883760014`*^9, 
   3.5521335899310904`*^9}, 3.552133640928007*^9, {3.5521340683234525`*^9, 
   3.552134076013892*^9}, {3.5521341295319533`*^9, 3.552134151579214*^9}, {
   3.5521366965317774`*^9, 3.5521367392912235`*^9}, {3.5521367825316963`*^9, 
   3.55213680077774*^9}, {3.55213980060532*^9, 3.552139837069406*^9}, {
   3.5521405984839563`*^9, 3.5521406516909995`*^9}, {3.552154643371278*^9, 
   3.552154644836362*^9}, {3.552155753877795*^9, 3.5521560877078896`*^9}, {
   3.5521562350953193`*^9, 3.552156325932515*^9}, {3.5521566000841956`*^9, 
   3.5521568849344883`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1051, 822},
WindowMargins->{{-1067, Automatic}, {40, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{602.64, 783.36}},
DefaultNewCellStyle->"Text",
Magnification->1.4000000953674316`,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 219, 3, 115, "Title"],
Cell[CellGroupData[{
Cell[823, 29, 104, 1, 98, "Section"],
Cell[930, 32, 1085, 19, 305, "Text"],
Cell[2018, 53, 1332, 21, 483, "Text"],
Cell[3353, 76, 1673, 24, 120, "Text"],
Cell[5029, 102, 1523, 39, 211, "Text"],
Cell[6555, 143, 1014, 23, 166, "Text"],
Cell[7572, 168, 1607, 23, 74, "Text"],
Cell[9182, 193, 134, 1, 74, "Text"],
Cell[9319, 196, 97, 1, 74, "Text"],
Cell[9419, 199, 731, 10, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[10187, 214, 88, 1, 55, "Section"],
Cell[10278, 217, 1506, 25, 179, "Text"],
Cell[CellGroupData[{
Cell[11809, 246, 105, 1, 52, "Subsection"],
Cell[11917, 249, 711, 16, 63, "Text"],
Cell[12631, 267, 201, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[12857, 274, 210, 3, 25, "Subsubsection"],
Cell[13070, 279, 359, 7, 109, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13466, 291, 184, 2, 35, "Subsubsection"],
Cell[13653, 295, 25668, 553, 2440, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
